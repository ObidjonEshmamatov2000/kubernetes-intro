apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: "{{ .Release.Name }}"
  replicas: {{ .Values.statefulset.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: resources-db
          image: {{ .Values.statefulset.image.repository }}:{{ .Values.statefulset.image.tag }}
          env:
              - name: POSTGRES_DB
                value: {{ .Values.db.databaseName }}
              - name: POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: resources-db-credentials
                    key: username
              - name: POSTGRES_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: resources-db-credentials
                    key: password
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
            - name: {{ .Values.db.initConfigMap }}
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
          startupProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
      volumes:
        - name: {{ .Values.db.initConfigMap }}
          configMap:
            name: {{ .Values.db.initConfigMap }}
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.statefulset.volume.storageClass }}
        resources:
          requests:
            storage: {{ .Values.statefulset.volume.storage }}
